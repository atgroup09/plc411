<?xml version='1.0' encoding='utf-8'?>
<project xmlns:ns1="http://www.plcopen.org/xml/tc6_0201" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns="http://www.plcopen.org/xml/tc6_0201">
  <fileHeader companyName="home" productName="PLC411_MAIN" productVersion="1" creationDateTime="2019-11-13T09:37:45" productRelease="0"/>
  <contentHeader name="PLC411_MAIN" modificationDateTime="2023-05-04T09:24:28" version="0">
    <coordinateInfo>
      <fbd>
        <scaling x="0" y="0"/>
      </fbd>
      <ld>
        <scaling x="0" y="0"/>
      </ld>
      <sfc>
        <scaling x="0" y="0"/>
      </sfc>
    </coordinateInfo>
  </contentHeader>
  <types>
    <dataTypes/>
    <pous>
      <pou name="Inc" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= V;

IF IN = TRUE THEN
  Val:= V+1;
END_IF;

Inc:= Val;

]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Increment of source value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="Dec" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= V;

IF IN = TRUE AND Val > 0 THEN
  Val:= V-1;
END_IF;

Dec:= Val;

]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Decrement of source value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="IncLim" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Mn">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[minimum]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Mx">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[maximum]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= Inc(IN:=IN, V:=V);
Val:= LIMIT(MN:=Mn, IN:=Val, MX:=Mx);
IncLim:= Val;]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Increment of source value (limited)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="DecLim" pouType="function">
        <interface>
          <returnType>
            <INT/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Mn">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[minimum]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Mx">
              <type>
                <INT/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[maximum]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= Dec(IN:=IN, V:=V);
Val:= LIMIT(MN:=Mn, IN:=Val, MX:=Mx);
DecLim:= Val;]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Decrement of source value (limited)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="Ramp1000" pouType="function">
        <interface>
          <returnType>
            <WORD/>
          </returnType>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <WORD/>
              </type>
              <documentation>
                <xhtml:p><![CDATA[previous RAMP-signal]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <INT/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= WORD_TO_INT(V);

IF IN = TRUE THEN

  Val:= Val+1;
  IF Val >= 1000 THEN
    Val:= 0;
  END_IF;

END_IF;

Ramp1000:= INT_TO_WORD(Val);

]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[RAMP-signal (from 0 to 1000)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="Cd16" pouType="function">
        <interface>
          <returnType>
            <WORD/>
          </returnType>
          <inputVars>
            <variable name="In0">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 0-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In1">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 1-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In2">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 2-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In3">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 3-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In4">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 4-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In5">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 5-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In6">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 6-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In7">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 7-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In8">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 8-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In9">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 9-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In10">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 10-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In11">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 11-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In12">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 12-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In13">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 13-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In14">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 14-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="In15">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of 15-bit]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Val">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(0), Val:=In0);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(1), Val:=In1);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(2), Val:=In2);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(3), Val:=In3);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(4), Val:=In4);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(5), Val:=In5);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(6), Val:=In6);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(7), Val:=In7);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(8), Val:=In8);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(9), Val:=In9);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(10), Val:=In10);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(11), Val:=In11);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(12), Val:=In12);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(13), Val:=In13);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(14), Val:=In14);
Val:= SetBitWo(Wo:=Val, Pos:=INT_TO_BYTE(15), Val:=In15);
Cd16:= Val;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[16-bit coder]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="GetBitWo" pouType="function">
        <interface>
          <returnType>
            <BOOL/>
          </returnType>
          <inputVars>
            <variable name="Wo">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source word]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pos">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[bit position (0..15)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Mask">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Mask:= REAL_TO_WORD(EXPT(INT_TO_REAL(2),BYTE_TO_INT(Pos)));
GetBitWo:= ((Wo AND Mask) > 0);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Get bit value from source word]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SetBitWo" pouType="function">
        <interface>
          <returnType>
            <WORD/>
          </returnType>
          <inputVars>
            <variable name="Wo">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source word]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pos">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[bit position (0..15)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Val">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[bit value]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <localVars>
            <variable name="Mask">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[Mask:= REAL_TO_WORD(EXPT(INT_TO_REAL(2),BYTE_TO_INT(Pos)));
IF Val = FALSE THEN
  SetBitWo:= (Wo AND NOT(Mask));
ELSE
  SetBitWo:= (Wo OR Mask);
END_IF;]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Set bit value in source word]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ScaleA_Ka" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of low point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of high point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Y1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[calibration value of low point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Y2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[calibration value of high point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ka">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value of the factor]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF Ex = TRUE THEN
  ScaleA_Ka:= (Y2-Y1)/(V2-V1);
ELSE  
  ScaleA_Ka:= Ka;
END_IF;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Calculate scale angle factor]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ScaleA_Kb" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of low point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of high point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Y1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[calibration value of low point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Y2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[calibration value of high point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kb">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value of the factor]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF Ex = TRUE THEN
  ScaleA_Kb:= ((Y1*V2)-(Y2*V1))/(V2-V1);
ELSE  
  ScaleA_Kb:= Kb;
END_IF;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Calculate scale offset factor]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="ScaleA" pouType="function">
        <interface>
          <returnType>
            <REAL/>
          </returnType>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[value of curent point]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ka">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[angle factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kb">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[offset factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Y">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source scale value]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF Ex = TRUE THEN
  ScaleA:= (Ka*V)+Kb;
ELSE  
  ScaleA:= Y;
END_IF;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Scale of analog value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TONb" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Start/Stop]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="PT">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Period]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.BlinkQuit (period for Q = FALSE, pediod for Q=TRUE)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ET">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.EstimatedTime]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON0">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <LD>
            <block localId="1" typeName="TON" instanceName="TON1" height="76" width="51" executionOrderId="0">
              <position x="474" y="144"/>
              <inputVariables>
                <variable formalParameter="IN">
                  <connectionPointIn>
                    <relPosition x="0" y="34"/>
                    <connection refLocalId="17" formalParameter="OUT">
                      <position x="474" y="178"/>
                      <position x="339" y="178"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="PT">
                  <connectionPointIn>
                    <relPosition x="0" y="62"/>
                    <connection refLocalId="4">
                      <position x="474" y="206"/>
                      <position x="405" y="206"/>
                      <position x="405" y="97"/>
                      <position x="348" y="97"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="Q">
                  <connectionPointOut>
                    <relPosition x="51" y="34"/>
                  </connectionPointOut>
                </variable>
                <variable formalParameter="ET">
                  <connectionPointOut>
                    <relPosition x="51" y="62"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <coil localId="2" height="15" width="21" negated="false" storage="reset" executionOrderId="0">
              <position x="638" y="170"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="1" formalParameter="Q">
                  <position x="638" y="178"/>
                  <position x="525" y="178"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>Q</variable>
            </coil>
            <block localId="3" typeName="TON" instanceName="TON0" height="76" width="51" executionOrderId="0">
              <position x="473" y="35"/>
              <inputVariables>
                <variable formalParameter="IN">
                  <connectionPointIn>
                    <relPosition x="0" y="34"/>
                    <connection refLocalId="12">
                      <position x="473" y="69"/>
                      <position x="220" y="69"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="PT">
                  <connectionPointIn>
                    <relPosition x="0" y="62"/>
                    <connection refLocalId="4">
                      <position x="473" y="97"/>
                      <position x="348" y="97"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="Q">
                  <connectionPointOut>
                    <relPosition x="51" y="34"/>
                  </connectionPointOut>
                </variable>
                <variable formalParameter="ET">
                  <connectionPointOut>
                    <relPosition x="51" y="62"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <inVariable localId="4" height="23" width="74" negated="false" executionOrderId="0">
              <position x="274" y="86"/>
              <connectionPointOut>
                <relPosition x="74" y="11"/>
              </connectionPointOut>
              <expression>PT</expression>
            </inVariable>
            <rightPowerRail localId="5" height="40" width="3" executionOrderId="0">
              <position x="821" y="158"/>
              <connectionPointIn>
                <relPosition x="0" y="20"/>
                <connection refLocalId="2">
                  <position x="821" y="178"/>
                  <position x="659" y="178"/>
                </connection>
              </connectionPointIn>
            </rightPowerRail>
            <coil localId="6" height="15" width="21" negated="false" storage="set" executionOrderId="0">
              <position x="637" y="61"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="3" formalParameter="Q">
                  <position x="637" y="69"/>
                  <position x="524" y="69"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>Q</variable>
            </coil>
            <rightPowerRail localId="7" height="40" width="3" executionOrderId="0">
              <position x="820" y="49"/>
              <connectionPointIn>
                <relPosition x="0" y="20"/>
                <connection refLocalId="6">
                  <position x="820" y="69"/>
                  <position x="658" y="69"/>
                </connection>
              </connectionPointIn>
            </rightPowerRail>
            <contact localId="8" height="15" width="21" negated="false" executionOrderId="0">
              <position x="90" y="61"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="9">
                  <position x="90" y="69"/>
                  <position x="40" y="69"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>IN</variable>
            </contact>
            <leftPowerRail localId="9" height="40" width="3" executionOrderId="0">
              <position x="37" y="49"/>
              <connectionPointOut formalParameter="">
                <relPosition x="3" y="20"/>
              </connectionPointOut>
            </leftPowerRail>
            <block localId="10" typeName="SEL" height="99" width="53">
              <position x="623" y="249"/>
              <inputVariables>
                <variable formalParameter="G">
                  <connectionPointIn>
                    <relPosition x="0" y="33"/>
                    <connection refLocalId="14">
                      <position x="623" y="282"/>
                      <position x="115" y="282"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN0">
                  <connectionPointIn>
                    <relPosition x="0" y="59"/>
                    <connection refLocalId="3" formalParameter="ET">
                      <position x="623" y="308"/>
                      <position x="580" y="308"/>
                      <position x="580" y="97"/>
                      <position x="524" y="97"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="85"/>
                    <connection refLocalId="1" formalParameter="ET">
                      <position x="623" y="334"/>
                      <position x="574" y="334"/>
                      <position x="574" y="206"/>
                      <position x="525" y="206"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="53" y="33"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <outVariable localId="11" height="23" width="73" negated="false">
              <position x="755" y="271"/>
              <connectionPointIn>
                <relPosition x="0" y="11"/>
                <connection refLocalId="10" formalParameter="OUT">
                  <position x="755" y="282"/>
                  <position x="676" y="282"/>
                </connection>
              </connectionPointIn>
              <expression>ET</expression>
            </outVariable>
            <contact localId="12" height="15" width="21" negated="true" executionOrderId="0">
              <position x="199" y="61"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="8">
                  <position x="199" y="69"/>
                  <position x="111" y="69"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>Q</variable>
            </contact>
            <contact localId="13" height="15" width="21" negated="false" executionOrderId="0">
              <position x="200" y="170"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="8">
                  <position x="200" y="178"/>
                  <position x="155" y="178"/>
                  <position x="155" y="69"/>
                  <position x="111" y="69"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>Q</variable>
            </contact>
            <contact localId="14" height="15" width="21" negated="false" executionOrderId="0">
              <position x="94" y="274"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="15">
                  <position x="94" y="282"/>
                  <position x="40" y="282"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>Q</variable>
            </contact>
            <leftPowerRail localId="15" height="40" width="3" executionOrderId="0">
              <position x="37" y="262"/>
              <connectionPointOut formalParameter="">
                <relPosition x="3" y="20"/>
              </connectionPointOut>
            </leftPowerRail>
            <block localId="17" typeName="OR" height="76" width="53">
              <position x="286" y="144"/>
              <inputVariables>
                <variable formalParameter="IN1">
                  <connectionPointIn>
                    <relPosition x="0" y="34"/>
                    <connection refLocalId="13">
                      <position x="286" y="178"/>
                      <position x="221" y="178"/>
                    </connection>
                  </connectionPointIn>
                </variable>
                <variable formalParameter="IN2">
                  <connectionPointIn>
                    <relPosition x="0" y="62"/>
                    <connection refLocalId="16">
                      <position x="286" y="206"/>
                      <position x="114" y="206"/>
                    </connection>
                  </connectionPointIn>
                </variable>
              </inputVariables>
              <inOutVariables/>
              <outputVariables>
                <variable formalParameter="OUT">
                  <connectionPointOut>
                    <relPosition x="53" y="34"/>
                  </connectionPointOut>
                </variable>
              </outputVariables>
            </block>
            <contact localId="16" height="15" width="21" negated="true" executionOrderId="0">
              <position x="93" y="198"/>
              <connectionPointIn>
                <relPosition x="0" y="8"/>
                <connection refLocalId="18">
                  <position x="93" y="206"/>
                  <position x="40" y="206"/>
                </connection>
              </connectionPointIn>
              <connectionPointOut>
                <relPosition x="21" y="8"/>
              </connectionPointOut>
              <variable>IN</variable>
            </contact>
            <leftPowerRail localId="18" height="40" width="3" executionOrderId="0">
              <position x="37" y="186"/>
              <connectionPointOut formalParameter="">
                <relPosition x="3" y="20"/>
              </connectionPointOut>
            </leftPowerRail>
          </LD>
        </body>
        <documentation>
          <xhtml:p><![CDATA[TON Periodical Blink]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TONc" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[start command]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[status]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ET">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[estimated time]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON1_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#600000ms"/>
              </initialValue>
            </variable>
            <variable name="TON1Inc">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1Inc_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON1Inc_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#300000ms"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[TON1_IN   := IN;
TON1Inc_IN:= IN;

IF TON1Inc.Q = TRUE THEN
  TON1_TM   := ADD_TIME(IN1:=TON1_TM, IN2:=TON1Inc_TM);
  TON1Inc_IN:= FALSE;
END_IF;

TON1(IN:=TON1_IN, PT:=TON1_TM);
TON1Inc(IN:=TON1Inc_IN, PT:=TON1Inc_TM);

Q := TON1.Q;
ET:= TON1.ET;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[TON Continuous]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TONms" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Start/Stop]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="MS">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Period (msec)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Status (FALSE - counting, TRUE - done)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ET">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.EstimatedTime]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ETMS">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.EstimatedTime (ms)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF IN = TRUE THEN
  
  IF MS > 0 THEN
    TON1_TM:= REAL_TO_TIME(DWORD_TO_REAL(MS)/1000.0);
  END_IF;
  
END_IF;

TON1(IN:=IN, PT:=TON1_TM);

IF (MS > 0 AND TON1.Q = TRUE) OR (MS = 0) THEN
  Q:= TRUE;
ELSE
  Q:= FALSE;
END_IF;

ET:= TON1.ET;
ETMS:= REAL_TO_DWORD(TIME_TO_REAL(TON1.ET)*1000.0);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[TON msec]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="TONs" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Start/Stop]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="SEC">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Period (sec)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.Status (FALSE - counting, TRUE - done)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ET">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.EstimatedTime]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ETMS">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[TON.EstimatedTime (ms)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF IN = TRUE THEN
  
  IF SEC > 0 THEN
    TON1_TM:= REAL_TO_TIME(WORD_TO_REAL(SEC));
  END_IF;
  
END_IF;

TON1(IN:=IN, PT:=TON1_TM);

IF (SEC > 0 AND TON1.Q = TRUE) OR (SEC = 0) THEN
  Q:= TRUE;
ELSE
  Q:= FALSE;
END_IF;

ET:= TON1.ET;
ETMS:= REAL_TO_DWORD(TIME_TO_REAL(TON1.ET)*1000.0);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[TON sec]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FiltrD" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[filter delay (ms)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ov">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[filtered source value]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Val">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON0">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[TON0(IN:=AND(Ex, NOT(V)), PT:=Tm);
TON1(IN:=AND(Ex, V), PT:=Tm);

IF TON0.Q = TRUE THEN
  Val:= FALSE;
END_IF;

IF TON1.Q = TRUE THEN
  Val:= TRUE;
END_IF;

Ov:= Val;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Filtration of discrete value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FiltrA" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="K">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[filter factor (0.0 .. 1.0)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ov">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[filtered source value]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Val">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[stored value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Klim">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[stored value]]></xhtml:p>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF Ex = TRUE THEN
  Klim:= LIMIT(MN:=0.0, IN:=K, MX:=1.0);
  Val := (Klim*V)+(1.0-Klim)*Ov;
ELSE
  Val:= V;
END_IF;

Ov:= Val;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Filtration of analog value]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="Reg2p" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Regulator.Start/Stop ]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Process Value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Hy">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Hysteresis (+/- from Sp) for Q.On/Off]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Output delay]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Output command]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="First">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[First iteration is completed (TRUE)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF IN = TRUE THEN
  
  IF (V < Sp AND First = FALSE) OR (V < (Sp-Hy)) THEN
    TON1_IN:= TRUE;
  ELSIF (V > (Sp+Hy)) THEN
    TON1_IN:= FALSE;
  END_IF;

  IF First = FALSE THEN
    First:= TRUE;
  END_IF;
  
ELSE
  First:= FALSE;
  TON1_IN:= FALSE;
  Q:= FALSE;
END_IF;

Q:= TON1.Q;

TON1(IN:=TON1_IN, PT:=Tm);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[2-Position Regulator]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="LoopCtrl" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Process Value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="CHi">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[HighAlarmZone.Allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="DHi">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[HighAlarmZone.Setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="THi">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[HighAlarmZone.Delay]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="CLo">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[LowAlarmZone.Allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="DLo">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[LowAlarmZone.Setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TLo">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[LowAlarmZone.Delay]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Q">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Result (TRUE - no breakage, FALSE - breakage)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OK">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Result code (0 - no breakage, 1 - breakage in Low Zone, 2 - breakage in High Zone)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON1">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON1_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON1_PT">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
            <variable name="K">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Result code (local)]]></xhtml:p>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[IF (V < DLo AND CLo = TRUE) THEN
  K:= 1;
  TON1_PT:= TLo;
ELSIF (V > DHi AND CHi = TRUE) THEN
  K:= 2;
  TON1_PT:= THi;
ELSE
  K:= 0;
END_IF;

IF K > 0 THEN
  TON1_IN:= TRUE;
  IF TON1.Q = TRUE THEN
    OK:= K;
  END_IF;
ELSE
  TON1_IN:= FALSE;
  OK:= 0;
END_IF;

TON1(IN:=TON1_IN, PT:=TON1_PT);

IF OK > 0 THEN
  Q:= TRUE;
ELSE
  Q:= FALSE;
END_IF;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Diagnostic of the Control Loop]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="PID1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ty">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of controller]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[P-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ki">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[I-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kd">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[D-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sck">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[external command to start regulator cycle]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[integral zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dZ">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[dead zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ym">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of OY]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value (%)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Er">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[error delta]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ErAbs">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[error delta (absolute)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ErPrev">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[error delta (previous cycle)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ErDiff">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[error delta (diff)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ppart">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[P-part]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ipart">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[I-part]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Dpart">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[D-part]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="SckSet">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[external start (set)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ErrorSet">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[e-zone (set)]]></xhtml:p>
              </documentation>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* Ty - regulator type *)
(* = 0 - PID *)
(* = 1 - PI *)
(* = 2 - PD *)
(* = 3 - P *)

(* Pro - process type *)
(* = 0 - increasing (by default) *)
(* = 1 - decreasing *)

(* Ym - type of OY *)
(* = 0 - unipolar    0.0 .. 100.0 % (by default) *)
(* = 1 - bipolar  -100.0 .. 100.0 % *)

(* Ok - result code *)
(* = 0 - work *)
(* = 1 - off *)
(* = 2 - dead (d-)zone *)
(* = 3 - integral (i-)zone *)
(* = 4 - incorrect regulator type *)

(* reset Sck *)
IF Sck = FALSE THEN
  SckSet:= FALSE;
END_IF;

(* test execution allow *)
IF Ex = TRUE THEN
  
  (* test regulator type *)
  IF Ty <= 3 THEN
    
    (* test start *)
    IF Sck = TRUE AND SckSet = FALSE AND ErrorSet = FALSE THEN
      
      SckSet:= TRUE;
      
      (* work *)
      Ok:= 0;
     
      Er    := (Sp-V);
      ErDiff:= (Er-ErPrev);
      ErPrev:= Er;
      ErAbs := ABS(IN:=Er);
      
      (* test d-zone *)
      IF ErAbs >= dZ THEN
        
        (* Ty: 0-PID, 1-PI, 2-PD, 3-P *)
        Ppart:= (Kp*Er);
        
        (* Ty: 0-PID, 1-PI *)
        IF (Ty = 0 OR Ty = 1) AND (ErAbs < dI OR dI = 0.0) AND Ki > 0.0 THEN
          (* i-zone *)
          Ok:= 3;
          Ipart:= (Ipart+Er);
          IF Ipart >= Ki THEN
            Ipart:= Ki;
          END_IF;
          Ipart:= ((1.0/Ki)*Ipart);
        ELSE
          Ipart:= 0.0;
        END_IF;
        
        (*0-PID, 2-PD*)
        IF (Ty = 0 OR Ty = 2) THEN
          Dpart:= (Kd*ErDiff);
        ELSE
          Dpart:= 0.0;
        END_IF;
        
        OY:= (Ppart+Ipart+Dpart)*100.0;
        
      ELSE
        (* d-zone *)
        Ok:= 2;
      END_IF;
      (* end of test d-zone *)
      
    END_IF;
    (* end of test start *)
  
  ELSE
    (* incorrect regulator type *)
    Ok:= 4;
    ErrorSet:= TRUE;
  END_IF;
  (* end of test regulator type *)
  
ELSE
  (* off *)
  Ok:= 1;
END_IF;
(* end of Ex *) 

(* off *)
IF Ok = 1 THEN
  OY       := 0.0;
  SckSet   := FALSE;
  ErrorSet := FALSE;
  Ppart    := 0.0;
  Ipart    := 0.0;
  Dpart    := 0.0;
END_IF;

(* error of regulator type *)
IF ErrorSet = TRUE THEN
  OY       := 0.0;
END_IF;

(* scale OY by type of process *)
IF Pro = 1 THEN
  (* decreasing *)
  OY:= (100.0-OY);
END_IF;

(* scale OY by type of output *)
IF Ym = 1 THEN
  (* bipolar *)
  OY:= LIMIT(MN:=-100.0, IN:=OY, MX:=100.0);
ELSE
  (* unipolar *)
  OY:= LIMIT(MN:=0.0, IN:=OY, MX:=100.0);
END_IF;
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[PID-controller (v1)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="PID2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ty">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of controller]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[P-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ki">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[I-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Kd">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[D-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="1000"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[cycle time (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dI">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[integral zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dZ">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[dead zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ym">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of OY]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value (%)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON_Work">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON_Work_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON_Work_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
            <variable name="PID1_1">
              <type>
                <derived name="PID1"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[PID1_1(Ex:=Ex, V:=V, Sp:=Sp, Ty:=Ty, Pro:=Pro, Kp:=Kp, Ki:=Ki, Kd:=Kd, Sck:=TON_Work.Q, dI:=dI, dZ:=dZ, Ym:=Ym);

Ok:= PID1_1.Ok;
OY:= PID1_1.OY;

IF Ex = TRUE AND Tm > 0 THEN
  TON_Work_TM:= REAL_TO_TIME(DWORD_TO_REAL(Tm)/1000.0);
  TON_Work_IN:= TRUE;
ELSE
  TON_Work_IN:= FALSE;
END_IF;

IF TON_Work.Q = TRUE THEN
  TON_Work_IN:= FALSE;
END_IF;

TON_Work(IN:=TON_Work_IN, PT:=TON_Work_TM);

(* DEBUG *)
(* set Class of debug variables to Output to use its as Outputs of the FB *)
(* set Class of debug variables to Local to hide its *)
(* Deb_P   := PID1_1.Deb_P; *)
(* Deb_I   := PID1_1.Deb_I; *)
(* Deb_D   := PID1_1.Deb_D; *)
(* Deb_Et  := REAL_TO_DWORD(TIME_TO_REAL(TON_Work.ET)*1000.0); *)
(* Deb_dEEt:= PID1_1.Deb_dEEt; *)
(* end of DEBUG *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[PID-controller (v2)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="PIDtun" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Diff">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[difference setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ty">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of controller]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OKp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[P-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OKi">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[I-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OKd">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[D-factor]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OTm">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[cycle time (ms)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TunDone">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="Tm1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[t0 (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm2">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[tu (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TmSum">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[t (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V1Set">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="V01">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
            </variable>
            <variable name="V063">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
            </variable>
            <variable name="Rr">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[R]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm1sec">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[t0 div 100]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TONcont1">
              <type>
                <derived name="TONc"/>
              </type>
            </variable>
            <variable name="TONcont1_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* Ty - regulator type *)
(* = 0 - PID *)
(* = 1 - PI *)
(* = 2 - PD *)
(* = 3 - P *)

(* Pro - process type *)
(* = 0 - increasing (by default) *)
(* = 1 - decreasing *)

(* Ok - result code *)
(* = 0 - work *)
(* = 1 - off *)
(* = 2 - incorrect regulator type *)
(* = 3 - work done success *)

IF Ex = TRUE THEN
  
  IF Ty <= 3 THEN
      
    IF TunDone = FALSE THEN
      
      (* work *)
      Ok:= 0;
      
      IF V1Set = FALSE THEN
        V1Set:= TRUE;
        (* calculate setpoint for V(0.1) by type of process *)
        IF Pro = 1 THEN
          (* decreasing *)
          V01 := (V-(0.1*Diff));
          V063:= (V-(0.63*Diff));
        ELSE
          (* increasing *)
          V01 := (V+(0.1*Diff));
          V063:= (V+(0.63*Diff));
        END_IF;
      END_IF;
      
      (* set Tm1 (ms) *)
      IF V < V01 THEN
        Tm1:= TIME_TO_REAL(TONcont1.ET)*1000.0;
      END_IF;
      
      (* set Tm2 (ms) *)
      IF V >= V063 THEN
        
        TONcont1_IN:= FALSE;
        TunDone    := TRUE;
        
        Tm2   := TIME_TO_REAL(TONcont1.ET)*1000.0;
        TmSum := (Tm1+Tm2);
        OTm   := REAL_TO_DWORD((Tm1*1.875));
        Rr    := (Diff/((TmSum-Tm1)/1000.0));
        Tm1sec:= (Tm1/1000.0);
        (* 1000 - divider to convert msec to sec *)
          
        (* calculate factors by type of regulator *)
        CASE BYTE_TO_INT(Ty) OF
          0:
            (* PID *)
            OKp:= (1.2/(Rr*Tm1sec));
            OKi:= (2.0*Tm1sec);
            OKd:= (0.4*Tm1sec);
          1:
            (* PI *)
            OKp:= (0.8/(Rr*Tm1sec));
            OKi:= (2.0*Tm1sec);
          2:
            (*PD*)
            OKp:= (1.0/(Rr*Tm1sec));
            OKd:= (0.25*Tm1sec);
          3:
            (*P*)
            OKp:= (1.0/(Rr*Tm1sec));
        END_CASE;
        
      END_IF;
      (* end of Tm2 *)
    ELSE
      (* work done success *)
      Ok:= 3;
    END_IF;
    (* end of TunDone *)
  ELSE
    (* incorrect regulator type *)
    Ok:= 2;
  END_IF;
  (* end of Ty *)
ELSE
  (* off *)
  Ok:= 1;
END_IF;
(* end of Ex *)

(* work *)
IF Ok = 0 THEN
  OY         := 100.0;
  TONcont1_IN:= TRUE;
END_IF;

(* off, error *)
IF Ok = 1 OR Ok = 2 THEN
  OY         := 0.0;
  TONcont1_IN:= FALSE;
  V1Set      := FALSE;
  TunDone    := FALSE;
  OKp        := 0.0;
  OKi        := 0.0;
  OKd        := 0.0;
  OTm        := 0;
END_IF;

(* work is done success *)
IF TunDone = TRUE THEN
  OY         := 0.0;
END_IF;

TONcont1(IN:=TONcont1_IN);

(* DEBUG *)
(* set Class of debug variables to Output to use its as Outputs of the FB *)
(* set Class of debug variables to Local to hide its *)
(* Deb_V1 := V01; *)
(* Deb_Tm1:= Tm1; *)
(* Deb_V2 := V063; *)
(* Deb_Tm2:= Tm2; *)
(* end of DEBUG *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Autotuning of PID-controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLR1" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sck">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[external command to start regulator cycle]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[cycle time (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[increment step of OY (%)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dZ">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[dead zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ym">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of OY]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value (%)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="Vprev">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[previous source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TmDv">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[dV time (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="UpDown">
              <type>
                <SINT/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[flag UpDown]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="SckSet">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[external start (set)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="ErrorSet">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[e-zone (set)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Er">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[error delta]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="TON_Dv">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON_Dv_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON_Dv_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* Pro - process type *)
(* = 0 - increasing (by default) *)
(* = 1 - decreasing *)

(* Ym - type of OY *)
(* = 0 - unipolar    0.0 .. 100.0 % (by default) *)
(* = 1 - bipolar  -100.0 .. 100.0 % *)

(* Ok - result code *)
(* = 0 - work *)
(* = 1 - off *)
(* = 2 - dead (d-)zone *)
(* = 4 - control failure (e-)zone *)

(* reset Sck *)
IF Sck = FALSE THEN
  SckSet:= FALSE;
END_IF;

(* test execution allow *)
IF Ex = TRUE THEN
    
  (* test start *)
  IF Sck = TRUE AND SckSet = FALSE AND ErrorSet = FALSE THEN
    
    SckSet:= TRUE;  
          
    (* work *)
    Ok:= 0;
    
    Er:= (Sp-V);
    
    (* test d-zone *)
    IF ABS(IN:=Er) >= dZ THEN
      (* exec *)
      {extern void AppFlr(FLR1*);AppFlr(data__);}
    ELSE
      (* d-zone *)
      Ok:= 2;
    END_IF;
    (* end of test d-zone *)
      
  END_IF;
  (* end of test start *)
  
ELSE
  (* off *)
  Ok:= 1;
END_IF;
(* end of Ex *) 

(* work *)
IF Ok = 0 THEN
  
  IF TmDv > 0.0 THEN
    (* msec to real-sec to time *)
    TON_Dv_TM:= REAL_TO_TIME(TmDv/1000.0);
    TON_Dv_IN:= TRUE;
  END_IF;
  
  IF TON_Dv.Q = TRUE THEN
    TON_Dv_IN:= FALSE;
    (* down *)
    IF UpDown = -1 THEN
      OY:= OY-dV;
    END_IF;
    (* up *)
    IF UpDown = 1 THEN
      OY:= OY+dV;
    END_IF;
  END_IF;
  
ELSE
  TON_Dv_IN:= FALSE;
END_IF;
(* end of work *)


(* off *)
IF Ok = 1 THEN
  OY       := 0.0;
  SckSet   := FALSE;
  ErrorSet := FALSE;
  Vprev    := 0.0;
END_IF;

(* error *)
IF ErrorSet = TRUE THEN
  OY       := 0.0;
END_IF;

(* scale OY by type of process *)
IF Pro = 1 THEN
  (* decreasing *)
  OY:= (100.0-OY);
END_IF;

(* scale OY by type of output *)
IF Ym = 1 THEN
  (* bipolar *)
  OY:= LIMIT(MN:=-100.0, IN:=OY, MX:=100.0);
ELSE
  (* unipolar *)
  OY:= LIMIT(MN:=0.0, IN:=OY, MX:=100.0);
END_IF;

TON_Dv(IN:=TON_Dv_IN, PT:=TON_Dv_TM);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FuzzyLogic-controller (v1)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLR2" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Sp">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Tm">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[cycle time (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dV">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[increment step of OY (%)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="dZ">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[dead zone]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Ym">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of OY]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value (%)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TON_Work">
              <type>
                <derived name="TON"/>
              </type>
            </variable>
            <variable name="TON_Work_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="TON_Work_TM">
              <type>
                <TIME/>
              </type>
              <initialValue>
                <simpleValue value="T#0ms"/>
              </initialValue>
            </variable>
            <variable name="FLR1_1">
              <type>
                <derived name="FLR1"/>
              </type>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[FLR1_1(Ex:=Ex, V:=V, Sp:=Sp, Pro:=Pro, Sck:=TON_Work.Q, Tm:=Tm, dV:=dV, dZ:=dZ, Ym:=Ym);

Ok:= FLR1_1.Ok;
OY:= FLR1_1.OY;

IF Ex = TRUE AND Tm > 0 THEN
  (* msec to real-sec to time *)
  TON_Work_TM:= REAL_TO_TIME(DWORD_TO_REAL(Tm)/1000.0);
  TON_Work_IN:= TRUE;
ELSE
  TON_Work_IN:= FALSE;
END_IF;

IF TON_Work.Q = TRUE THEN
  TON_Work_IN:= FALSE;
END_IF;

TON_Work(IN:=TON_Work_IN, PT:=TON_Work_TM);

(* DEBUG *)
(* set Class of debug variables to Output to use its as Outputs of the FB *)
(* set Class of debug variables to Local to hide its *)
(* Deb_Speed := FLR1_1.Deb_Speed; *)
(* Deb_UpDown:= FLR1_1.Deb_UpDown; *)
(* Deb_dVTm  := FLR1_1.Deb_dVTm; *)
(* Deb_dVEt  := FLR1_1.Deb_dVEt; *)
(* Deb_dEEt  := FLR1_1.Deb_dEEt; *)
(* Deb_Et    := REAL_TO_DWORD(TIME_TO_REAL(TON_Work.ET)*1000.0); *)
(* Deb_Y0    := FLR1_1.Deb_Y0; *)
(* Deb_Er    := FLR1_1.Deb_Er; *)
(* Deb_Cm    := FLR1_1.Deb_Cm; *)
(* Deb_m     := FLR1_1.Deb_m; *)
(* end of DEBUG *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[FuzzyLogic-controller (v2)]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="FLRtun" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="Ex">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[execution allow]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[source value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Diff">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[difference setpoint]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="Pro">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[type of process]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="Ok">
              <type>
                <BYTE/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[result code]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OY">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[regulator value]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="OTm">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[cycle time (ms)]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
          <localVars>
            <variable name="TunDone">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="Tm1">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[t0 (ms)]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="V1Set">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
            <variable name="V01">
              <type>
                <REAL/>
              </type>
              <initialValue>
                <simpleValue value="0.0"/>
              </initialValue>
            </variable>
            <variable name="TONcont1">
              <type>
                <derived name="TONc"/>
              </type>
            </variable>
            <variable name="TONcont1_IN">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
            </variable>
          </localVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[(* Pro - process type *)
(* = 0 - increasing (by default) *)
(* = 1 - decreasing *)

(* Ok - result code *)
(* = 0 - work *)
(* = 1 - off *)
(* = 3 - work done success *)

IF Ex = TRUE THEN
  
  IF TunDone = FALSE THEN
      
    (* work *)
    Ok:= 0;
      
    IF V1Set = FALSE THEN
      V1Set:= TRUE;
      (* calculate setpoint for V(0.1) by type of process *)
      IF Pro = 1 THEN
        (* decreasing *)
        V01 := (V-(0.1*Diff));
      ELSE
        (* increasing *)
        V01 := (V+(0.1*Diff));
      END_IF;
    END_IF;
      
    (* set Tm1 (ms) *)
    IF V < V01 THEN
      Tm1:= TIME_TO_REAL(TONcont1.ET)*1000.0;
    ELSE
      OTm:= REAL_TO_DWORD((Tm1*1.875));
      TunDone:= TRUE;
      (* work done success *)
      Ok:= 3;
    END_IF;
    
  END_IF;
  (* end of TunDone *)
    
ELSE
  (* off *)
  Ok:= 1;
END_IF;
(* end of Ex *)

(* work *)
IF Ok = 0 THEN
  OY         := 100.0;
  TONcont1_IN:= TRUE;
END_IF;

(* off, error *)
IF Ok = 1 THEN
  OY         := 0.0;
  TONcont1_IN:= FALSE;
  V1Set      := FALSE;
  TunDone    := FALSE;
  OTm        := 0;
END_IF;

(* work is done success *)
IF TunDone = TRUE THEN
  OY         := 0.0;
  TONcont1_IN:= FALSE;
END_IF;

TONcont1(IN:=TONcont1_IN);

(* DEBUG *)
(* set Class of debug variables to Output to use its as Outputs of the FB *)
(* set Class of debug variables to Local to hide its *)
(* Deb_V1 := V01; *)
(* Deb_Tm1:= Tm1; *)
(* end of DEBUG *)
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Autotuning of FLR-controller]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="Dc16" pouType="functionBlock">
        <interface>
          <inputVars>
            <variable name="V">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value (bitfield)]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
          <outputVars>
            <variable name="O0">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 0-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O1">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 1-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O2">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 2-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O3">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 3-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O4">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 4-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O5">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 5-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O6">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 6-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O7">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 7-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O8">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 8-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O9">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 9-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O10">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 10-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O11">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 11-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O12">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 12-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O13">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 13-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O14">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 14-bit]]></xhtml:p>
              </documentation>
            </variable>
            <variable name="O15">
              <type>
                <BOOL/>
              </type>
              <initialValue>
                <simpleValue value="FALSE"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[Value of 15-bit]]></xhtml:p>
              </documentation>
            </variable>
          </outputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[O0 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(0));
O1 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(1));
O2 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(2));
O3 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(3));
O4 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(4));
O5 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(5));
O6 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(6));
O7 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(7));
O8 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(8));
O9 := GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(9));
O10:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(10));
O11:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(11));
O12:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(12));
O13:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(13));
O14:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(14));
O15:= GetBitWo(Wo:=V, Pos:=INT_TO_BYTE(15));
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[16-bit decoder]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="MsecToTime" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="MS">
              <type>
                <DWORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[msec]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[MsecToTime:= REAL_TO_TIME(DWORD_TO_REAL(MS)/1000.0);
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Convert msec to TIME]]></xhtml:p>
        </documentation>
      </pou>
      <pou name="SecToTime" pouType="function">
        <interface>
          <returnType>
            <TIME/>
          </returnType>
          <inputVars>
            <variable name="SEC">
              <type>
                <WORD/>
              </type>
              <initialValue>
                <simpleValue value="0"/>
              </initialValue>
              <documentation>
                <xhtml:p><![CDATA[sec]]></xhtml:p>
              </documentation>
            </variable>
          </inputVars>
        </interface>
        <body>
          <ST>
            <xhtml:p><![CDATA[SecToTime:= REAL_TO_TIME(WORD_TO_REAL(SEC));
]]></xhtml:p>
          </ST>
        </body>
        <documentation>
          <xhtml:p><![CDATA[Convert sec to TIME]]></xhtml:p>
        </documentation>
      </pou>
    </pous>
  </types>
  <instances>
    <configurations/>
  </instances>
</project>
